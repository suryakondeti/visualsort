{"version":3,"sources":["insertionSort.js","selectionSort.js","quickSort.js","bubbleSort.js","mergeSort.js","App.js","reportWebVitals.js","index.js"],"names":["temp","final_arr","final_color_arr","insertionSort","givenArr","color_arr","Array","length","fill","i","j","push","slice","selectionSort","inputArr","n","min","quickSort","array","pivot","lesserArray","greaterArray","resultArr","concat","from","quickSortHelper","bubbleSort","numSwaps","mergeSort","mid","Math","floor","left","right","arr1","arr2","sorted","shift","merge","mergeSortHelper","Chart","defaults","global","legend","display","delay","ms","Promise","res","setTimeout","App","props","numsToSort","numCols","speed","algo","state","selectorFlag","sliderFlag","algoSelected","data","labels","datasets","backgroundColor","borderWidth","newValue","this","generateList","console","log","toSort","toColor","setState","visualize","colorArr","visualize_helper","givenCols","randomArray","r","random","indexOf","window","location","reload","changeEvent","dropDownUpdate","target","value","align","style","Select","autoWidth","defaultValue","renderValue","disabled","onChange","handleSelectChange","MenuItem","Slider","width","step","max","valueLabelDisplay","sizeSliderUpdate","speedSliderUpdate","Button","variant","color","onClick","startSort","disableElevation","reset","height","options","responsive","scales","yAxes","gridLines","ticks","beginAtZero","xAxes","maintainAspectRatio","fontSize","href","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7a2e069.chunk.js","sourcesContent":["const final_arr = [];\r\nconst final_color_arr = [];\r\nvar temp;\r\nfunction insertionSort(givenArr) {\r\n  const color_arr = new Array(givenArr.length).fill(0);\r\n  for (var i = 1; i < givenArr.length; i++) {\r\n    if (givenArr[i] < givenArr[i - 1]) {\r\n      var j = i;\r\n      while (givenArr[j] < givenArr[j - 1] && j > 0) {\r\n        temp = givenArr[j];\r\n        givenArr[j] = givenArr[j - 1];\r\n        givenArr[j - 1] = temp;\r\n        j--;\r\n        color_arr[j] = 1;\r\n        color_arr[j - 1] = 1;\r\n        final_arr.push(givenArr.slice()); //.slice() for deepcopying (pass by value)\r\n        final_color_arr.push(color_arr.slice());\r\n        color_arr.fill(0);\r\n      }\r\n    }\r\n  }\r\n  return [final_arr, final_color_arr];\r\n}\r\n\r\nexport default insertionSort;\r\n","const final_arr = [];\r\nconst final_color_arr = [];\r\nfunction selectionSort(inputArr) {\r\n  const color_arr = new Array(inputArr.length).fill(0);\r\n  let n = inputArr.length;\r\n  for (let i = 0; i < n; i++) {\r\n    let min = i;\r\n    for (let j = i + 1; j < n; j++) {\r\n      if (inputArr[j] < inputArr[min]) {\r\n        min = j;\r\n      }\r\n    }\r\n    if (min !== i) {\r\n      let temp = inputArr[i];\r\n      inputArr[i] = inputArr[min];\r\n      inputArr[min] = temp;\r\n      color_arr[i] = 1;\r\n      color_arr[min] = 1;\r\n      final_arr.push(inputArr.slice()); //.slice() for deepcopying (pass by value)\r\n      final_color_arr.push(color_arr.slice());\r\n      color_arr.fill(0);\r\n    }\r\n  }\r\n  return [final_arr, final_color_arr];\r\n}\r\n\r\nexport default selectionSort;\r\n","var final_arr = [];\r\nconst final_color_arr = [];\r\nfunction quickSort(array) {\r\n  if (array.length < 2) {\r\n    return array;\r\n  }\r\n\r\n  var pivot = array[0];\r\n  var lesserArray = [];\r\n  var greaterArray = [];\r\n\r\n  for (var i = 1; i < array.length; i++) {\r\n    if (array[i] > pivot) {\r\n      greaterArray.push(array[i]);\r\n    } else {\r\n      lesserArray.push(array[i]);\r\n    }\r\n  }\r\n  var resultArr = quickSort(lesserArray).concat(pivot, quickSort(greaterArray));\r\n  final_arr.push(Array.from(resultArr));\r\n  var color_arr = new Array(lesserArray.length).fill(0);\r\n  color_arr.push(2);\r\n  color_arr = color_arr.concat(new Array(greaterArray.length).fill(1));\r\n  final_color_arr.push(color_arr.slice());\r\n  color_arr.fill(0);\r\n  return resultArr;\r\n}\r\n\r\nfunction quickSortHelper(array) {\r\n  quickSort(array);\r\n  return [final_arr, final_color_arr];\r\n}\r\nexport default quickSortHelper;\r\n","const final_arr = [];\r\nconst final_color_arr = [];\r\nvar temp;\r\n\r\nfunction bubbleSort(givenArr) {\r\n  const color_arr = new Array(givenArr.length).fill(0);\r\n  var numSwaps = 1;\r\n  while (numSwaps !== 0) {\r\n    numSwaps = 0;\r\n    for (var i = 0; i < givenArr.length - 1; i++) {\r\n      if (givenArr[i] > givenArr[i + 1]) {\r\n        numSwaps += 1;\r\n        temp = givenArr[i];\r\n        givenArr[i] = givenArr[i + 1];\r\n        givenArr[i + 1] = temp;\r\n        color_arr[i] = 1;\r\n        color_arr[i + 1] = 1;\r\n        final_arr.push(givenArr.slice()); //.slice() for deepcopying (pass by value)\r\n        final_color_arr.push(color_arr.slice());\r\n        color_arr.fill(0);\r\n      }\r\n    }\r\n  }\r\n  return [final_arr, final_color_arr];\r\n\r\n  //   for (var i = 1; i < givenArr.length; i++) {\r\n  //     if (givenArr[i] < givenArr[i - 1]) {\r\n  //       var j = i;\r\n  //       while (givenArr[j] < givenArr[j - 1] && j > 0) {\r\n  //         temp = givenArr[j];\r\n  //         givenArr[j] = givenArr[j - 1];\r\n  //         givenArr[j - 1] = temp;\r\n  //         j--;\r\n  //         color_arr[j] = 1;\r\n  //         color_arr[j - 1] = 1;\r\n  //         final_arr.push(givenArr.slice()); //.slice() for deepcopying (pass by value)\r\n  //         final_color_arr.push(color_arr.slice());\r\n  //         color_arr.fill(0);\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return [final_arr, final_color_arr];\r\n}\r\n\r\nexport default bubbleSort;\r\n","var final_arr = [];\r\nvar final_color_arr = [];\r\nfunction merge(arr1, arr2) {\r\n  let sorted = [];\r\n  while (arr1.length && arr2.length) {\r\n    if (arr1[0] < arr2[0]) sorted.push(arr1.shift());\r\n    else sorted.push(arr2.shift());\r\n  }\r\n  return sorted.concat(arr1.slice().concat(arr2.slice()));\r\n}\r\n\r\nfunction mergeSort(array) {\r\n  if (array.length <= 1) return array;\r\n  let mid = Math.floor(array.length / 2),\r\n    left = mergeSort(array.slice(0, mid)),\r\n    right = mergeSort(array.slice(mid));\r\n  var resultArr = merge(left, right);\r\n  final_arr.push(Array.from(resultArr));\r\n  var color_arr = new Array(left.length).fill(1);\r\n  color_arr = color_arr.concat(new Array(right.length).fill(0));\r\n  final_color_arr.push(color_arr.slice());\r\n  color_arr.fill(0);\r\n  return resultArr;\r\n}\r\n\r\nfunction mergeSortHelper(array) {\r\n  mergeSort(array);\r\n  return [final_arr, final_color_arr];\r\n}\r\nexport default mergeSortHelper;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport Chart from \"chart.js\";\r\nimport \"react-dropdown/style.css\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport insertionSort from \"./insertionSort\";\r\nimport selectionSort from \"./selectionSort\";\r\nimport quickSortHelper from \"./quickSort\";\r\nimport { Slider } from \"@material-ui/core\";\r\nimport { Select } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport bubbleSort from \"./bubbleSort\";\r\nimport mergeSortHelper from \"./mergeSort\";\r\nimport ReactFooter from \"react-footer-comp\";\r\n\r\nChart.defaults.global.legend.display = false;\r\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n\r\nclass App extends React.Component {\r\n  sizeSliderUpdate(newValue) {\r\n    this.numCols = newValue;\r\n    this.generateList(this.numCols);\r\n  }\r\n  speedSliderUpdate(newValue) {\r\n    console.log(this.speed);\r\n    this.speed = -196 * newValue + 1980;\r\n    console.log(this.speed);\r\n  }\r\n  dropDownUpdate(newValue) {\r\n    this.algo = newValue;\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.numsToSort = [65, 123, 80, 181, 156, 55, 40, 2, 13, 97];\r\n    this.numCols = 0;\r\n    this.speed = 1000;\r\n    this.algo = null;\r\n    this.state = {\r\n      selectorFlag: false,\r\n      sliderFlag: false,\r\n      algoSelected: \"INSERTION SORT\",\r\n      data: {\r\n        labels: [65, 123, 80, 181, 156, 55, 40, 2, 13, 97],\r\n        datasets: [\r\n          {\r\n            backgroundColor: \"rgb(0,158,192)\",\r\n            borderWidth: 2,\r\n            data: [65, 123, 80, 181, 156, 55, 40, 2, 13, 97],\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n\r\n  startSort() {\r\n    var toSort;\r\n    var toColor;\r\n    this.setState({ selectorFlag: true });\r\n    this.setState({ sliderFlag: true });\r\n    if (this.numCols === 0) {\r\n      this.numCols = 10;\r\n    }\r\n    if (this.algo === null) {\r\n      this.algo = \"INSERTION SORT\";\r\n    }\r\n    switch (this.algo) {\r\n      case \"SELECTION SORT\":\r\n        console.log(\"SELECTION  \", this.numCols);\r\n        [toSort, toColor] = selectionSort(this.numsToSort);\r\n        this.visualize(toSort, toColor);\r\n        break;\r\n\r\n      case \"MERGE SORT\":\r\n        console.log(\"MERGE \", this.numCols);\r\n        [toSort, toColor] = mergeSortHelper(this.numsToSort);\r\n        this.visualize(toSort, toColor);\r\n        break;\r\n\r\n      case \"BUBBLE SORT\":\r\n        console.log(\"BUBBLE \", this.numCols);\r\n        [toSort, toColor] = bubbleSort(this.numsToSort);\r\n        this.visualize(toSort, toColor);\r\n        break;\r\n\r\n      case \"INSERTION SORT\":\r\n        console.log(\"INSERTION \", this.numCols);\r\n        console.log(this.numsToSort);\r\n        [toSort, toColor] = insertionSort(this.numsToSort);\r\n        this.visualize(toSort, toColor);\r\n        break;\r\n\r\n      case \"QUICK SORT\":\r\n        console.log(\"QUICK  \", this.numCols);\r\n        [toSort, toColor] = quickSortHelper(this.numsToSort);\r\n        this.visualize(toSort, toColor);\r\n        break;\r\n\r\n      default: {\r\n      }\r\n    }\r\n  }\r\n\r\n  visualize_helper(givenArr, colorArr) {\r\n    console.log(colorArr);\r\n    if (colorArr.length < givenArr.length) {\r\n      colorArr = colorArr.concat(\r\n        new Array(givenArr.length - colorArr.length).fill(\"rgb(255, 69, 0)\")\r\n      );\r\n    }\r\n    console.log(\"new is \", colorArr);\r\n    this.setState({\r\n      data: {\r\n        labels: givenArr,\r\n        datasets: [\r\n          {\r\n            backgroundColor: colorArr,\r\n            borderWidth: 2,\r\n            data: givenArr,\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  }\r\n\r\n  async visualize(final_arr, final_color_arr) {\r\n    for (var i = 0; i < final_arr.length; i++) {\r\n      if (final_color_arr === null) {\r\n        final_color_arr = [];\r\n        final_color_arr[i] = new Array(final_arr.length).fill(0);\r\n      }\r\n      const colorArr = [];\r\n      for (var j = 0; j < final_color_arr[i].length; j++) {\r\n        if (final_color_arr[i][j] === 1) {\r\n          colorArr.push(\"rgb(0,0,128)\");\r\n        } else if (final_color_arr[i][j] === 0) {\r\n          colorArr.push(\"rgb(230,0,126)\");\r\n        } else {\r\n          colorArr.push(\"rgb(255,211,0)\");\r\n        }\r\n      }\r\n      this.visualize_helper(final_arr[i], colorArr);\r\n      await delay(this.speed);\r\n    }\r\n    // this.setState({ selectorFlag: false });\r\n    // this.setState({ sliderFlag: false });\r\n  }\r\n\r\n  generateList(givenCols) {\r\n    const randomArray = [];\r\n    while (randomArray.length < givenCols) {\r\n      var r = Math.floor(Math.random() * 250) + 1;\r\n      if (randomArray.indexOf(r) === -1) randomArray.push(r);\r\n    }\r\n    this.numsToSort = randomArray;\r\n    this.setState({\r\n      data: {\r\n        labels: randomArray,\r\n        datasets: [\r\n          {\r\n            backgroundColor: \"rgb(0,158,192)\",\r\n            borderWidth: 2,\r\n            data: randomArray,\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    window.location.reload();\r\n  }\r\n\r\n  handleSelectChange(changeEvent) {\r\n    this.dropDownUpdate(changeEvent.target.value);\r\n    this.setState({ algoSelected: changeEvent.target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <div align=\"center\">\r\n        <br></br>\r\n        <div style={{ display: \"inline-block\" }}>\r\n          <b>Select Algorithm:</b> &nbsp; &nbsp;\r\n          <Select\r\n            autoWidth={true}\r\n            defaultValue={\"INSERTION SORT\"}\r\n            renderValue={() => {\r\n              return this.state.algoSelected;\r\n            }}\r\n            value={this.state.algoSelected}\r\n            disabled={this.state.selectorFlag}\r\n            onChange={(changeEvent, newValue) => {\r\n              this.handleSelectChange(changeEvent);\r\n            }}\r\n          >\r\n            <MenuItem value={\"INSERTION SORT\"}>Insertion Sort</MenuItem>\r\n            <MenuItem value={\"SELECTION SORT\"}>Selection Sort</MenuItem>\r\n            <MenuItem value={\"BUBBLE SORT\"}>Bubble Sort</MenuItem>\r\n            <MenuItem value={\"QUICK SORT\"}>Quick Sort</MenuItem>\r\n            <MenuItem value={\"MERGE SORT\"}>Merge Sort</MenuItem>\r\n          </Select>\r\n        </div>\r\n        <br></br>\r\n        <div style={{ display: \"inline-block\" }}>\r\n          <p>\r\n            <b>Array length:</b>\r\n          </p>\r\n          <Slider\r\n            style={{ width: 300 }}\r\n            disabled={this.state.sliderFlag}\r\n            step={5}\r\n            defaultValue={10}\r\n            max={100}\r\n            min={5}\r\n            valueLabelDisplay={\"on\"}\r\n            onChange={(changeEvent, newValue) => {\r\n              this.sizeSliderUpdate(newValue);\r\n            }}\r\n          />\r\n        </div>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        <div style={{ display: \"inline-block\" }}>\r\n          <p>\r\n            <b>Sorting speed:</b>\r\n          </p>\r\n          <Slider\r\n            style={{ width: 300 }}\r\n            disabled={this.state.sliderFlag}\r\n            step={1}\r\n            defaultValue={5}\r\n            max={10}\r\n            min={1}\r\n            valueLabelDisplay={\"off\"}\r\n            onChange={(changeEvent, newValue) => {\r\n              this.speedSliderUpdate(newValue);\r\n            }}\r\n          />\r\n        </div>\r\n        <br></br>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            this.startSort();\r\n          }}\r\n          disableElevation\r\n        >\r\n          Visualize!\r\n        </Button>\r\n        &nbsp; &nbsp; &nbsp;\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            this.reset();\r\n          }}\r\n          disableElevation\r\n        >\r\n          Reset\r\n        </Button>\r\n        <Bar\r\n          width={300}\r\n          height={100}\r\n          options={{\r\n            responsive: true,\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                  ticks: {\r\n                    display: false,\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            maintainAspectRatio: true,\r\n          }}\r\n          data={this.state.data}\r\n        />\r\n        <br></br>\r\n        <br></br>\r\n        <p\r\n          style={{\r\n            fontSize: 12,\r\n            align: \"center\",\r\n          }}\r\n        >\r\n          Questions/concerns/suggestions? &#8239;\r\n          <a href=\"mailto: suryapkondeti@gmail.com\">Drop me an email</a>\r\n        </p>\r\n        {/* <ReactFooter\r\n          height={25}\r\n          bgColor=\"#ffffff\"\r\n          text={\r\n            \r\n          }\r\n        ></ReactFooter> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}